<Window x:Class="ReportGen.ReportWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ReportGen"
        
        Title="MainWindow" Height="700" Width="525" ResizeMode="NoResize">
    <Window.Resources>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>
        
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="2" />
                            <Border
                          Grid.Column="0"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
                            <Path
                          x:Name="Arrow"
                          Grid.Column="1"    
                          Fill="{TemplateBinding Foreground}"
                          Stroke="{TemplateBinding Foreground}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 8 12 L 16 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="White" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="Gray"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                <Setter TargetName="DropDownBorder" Property="MinWidth" Value="200"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        
        <!--TextBlock Style-->
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
        </Style>       

        <!--Button style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<local:DoctorName x:Key="docType"/>-->
        <!--<local:Report x:Key="ReportProp" />-->
        <Style x:Key="DataGridVisibility" TargetType="{x:Type DataGrid}">            
            <Setter Property="AlternatingRowBackground" Value="LightBlue"/>                       
        </Style>
        
        <Style x:Key="TextBoxErrorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right"  Foreground="Red"  FontSize="14pt" 
                                       FontWeight="Bold">***</TextBlock>
                            <AdornedElementPlaceholder>
                                <Border BorderThickness="1" BorderBrush="Red"/>
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"  Value="{Binding RelativeSource={x:Static RelativeSource.Self}, 
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>            
        
    </Window.Resources>
    <Grid x:Name="MainGrid" >
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <TextBlock Margin="50,10" Text="Date" HorizontalAlignment="Left" VerticalAlignment="Center" />
            <DatePicker Name="ReportDate" Height="25" Width="110" HorizontalAlignment="Center" VerticalAlignment="Center" 
                        SelectedDateChanged="DatePicker_SelectedDateChanged" SelectedDate="{Binding SelectedDate}"/>
        </Grid>
        <Grid Grid.Row="1">
            <TextBlock Margin="50,10" Height="25" Width="110" Text="Hospital" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <ComboBox  Name="HospitalCombo" HorizontalAlignment="Center"  
                       ItemsSource="{Binding Hospitals}"
                       SelectedValuePath="Doctors"
                       SelectedValue="{Binding Doctors}"
                       SelectedItem="{Binding SelectedHospital}"
                       DisplayMemberPath="Name"         
                       Style="{StaticResource ComboBoxStyle}"
                       SelectedIndex="0"
                       VerticalAlignment="Center"
                       IsSynchronizedWithCurrentItem="True"
                       Height="25" Width="110"/>
            <Button Style="{StaticResource ButtonStyle}" Margin="100,10" Width="60" Content="ADD" Click="AddHospitalClickHandler" HorizontalAlignment="Right" VerticalAlignment="Center"/>
        </Grid>
        <Grid Grid.Row="2">
            <TextBlock x:Name="doctorTitle" Height="25" Width="110" Margin="50,10" Text="Doctor" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <ComboBox Name="DoctorsCombo" 
                      ItemsSource="{Binding Doctors}"  
                      DisplayMemberPath="Name"
                      SelectedItem="{Binding SelectedDoctor}"                      
                      SelectedIndex="0"
                      Style="{StaticResource ComboBoxStyle}"                      
                      IsSynchronizedWithCurrentItem="True"
                      Height="25" Width="110" 
                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <!--<Button Margin="100,10" Width="60" Content="ADD" Click="AddDoctorClickHandler" HorizontalAlignment="Right" VerticalAlignment="Center"/>-->
        </Grid>
        <Grid Grid.Row="3">
            <TextBlock Margin="50,10" Height="25" Width="110" Text="Test" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <ComboBox Name="TestCombo" 
                      SelectedIndex="0"
                      ItemsSource="{Binding Tests}"                      
                      DisplayMemberPath="Name"
                      SelectedItem="{Binding SelectedTest}"                      
                      SelectedValuePath="Price"
                      SelectedValue="{Binding TestPrice}"
                      Style="{StaticResource ComboBoxStyle}"                      
                      IsSynchronizedWithCurrentItem="True"
                      Height="25" Width="110" 
                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Button Style="{StaticResource ButtonStyle}" Margin="100,10" Width="60" Content="ADD" 
                    Click="AddTestClickHandler" HorizontalAlignment="Right" VerticalAlignment="Center"/>
        </Grid>
        <Grid Grid.Row="4">
            <TextBlock Margin="50,10" Height="25" Width="110" Text="Quantity" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBox x:Name="QuantityTxt" Style="{StaticResource TextBoxErrorStyle}" Text="{Binding QuantityNumber,Mode=TwoWay,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}" Height="25" Width="110" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
        <Grid Grid.Row="5">
            <TextBlock Margin="50,10" Height="25" Width="110" Text="Price" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBox x:Name="PriceTxt" Style="{StaticResource TextBoxErrorStyle}" Text="{Binding TestPrice,StringFormat=\{0:n2\},ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}" Height="25" Width="110" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
        <Grid Grid.Row="6">
            <TextBlock Margin="50,10" Height="25" Width="110" Text="Discount" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBox x:Name="DiscountTxt" Style="{StaticResource TextBoxErrorStyle}" Text="{Binding DiscountValue,Mode=TwoWay,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}" Height="25" Width="110" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
        <Grid Grid.Row="7">
            <TextBlock Margin="50,10" Height="25" Width="110" Text="Total" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding TotalValue,StringFormat=\{0:n2\}}" Height="25" Width="110" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <!--<TextBox Text="{Binding Total}" Height="25" Width="110" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
            <Button Style="{StaticResource ButtonStyle}" Name="GenerateBtn" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,8,100,8" Content="Queue"
                    Click="QueueClickHandler" Height="22" Width="60" />
        </Grid>
        <StackPanel Grid.Row="8">
            <DataGrid x:Name="ReportDataGrid" Height="200" Width="500" 
                      ItemsSource="{Binding ReportCollection}"
                      HeadersVisibility="Column"
                      Style="{StaticResource DataGridVisibility}">
            </DataGrid>
            <Button Style="{StaticResource ButtonStyle}" Width="60" Height="25" Content="Generate" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                    Margin="20" Click="GenerateClickHandler"/>
        </StackPanel>
    </Grid>
</Window>
